{"code": 200, "data": {"questionId": 2124, "questionType": 8, "typeName": "\u5355\u8bcd\u586b\u7a7a", "occurrence": 17, "isOccur": 0, "collectColorType": null, "practiceCount": 1, "createTime": "2020-11-12T03:24:00.000+00:00", "isVip": "1", "probationTotalCount": 0, "userProbationCountLeft": 0, "questionStatus": null, "ownerFlag": null, "similarToQuestionIdList": null, "title": "\u952e\u5165\u7f3a\u5c11\u7684\u5b57\u6bcd\uff0c\u5b8c\u6210\u4e0b\u9762\u7684\u6587\u5b57", "duration": 180, "difficulty": 2, "difficultyName": "\u4e00\u822c\uff08105~115\uff09", "blankContent": "The value can be any value, including an environment variable. Each ____ is a regular ____ and ____ command ____ executed ____ the ____ for ____ first ____ that ____ the ____ ( ____ make ____ you don't have ____ patterns ). Each ____ list ____ end ____ a ____ semicolon. The return status is zero if the statement terminates without syntax errors.", "partBlankContent": "The value can be any value, including an environment variable. Each pat____ is a regular expre_____ and t__ command li__ executed i_ the o__ for t__ first pat____ that mat____ the va___ ( s_ make su__ you don't have overl______ patterns ). Each com____ list mu__ end wi__ a dou___ semicolon. The return status is zero if the statement terminates without syntax errors.", "fullContent": "\nThe value can be any value, including an environment variable. Each pattern is a regular expression and the command list executed is the one for the first pattern that matches the value ( so make sure you don't have overlapping patterns ). Each command list must end with a double semicolon. The return status is zero if the statement terminates without syntax errors.", "answer": "\u8be5\u503c\u53ef\u4ee5\u662f\u4efb\u4f55\u503c\uff0c\u5305\u62ec\u73af\u5883\u53d8\u91cf\u3002\u6bcf\u4e2a\u6a21\u5f0f\u90fd\u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u6240\u6267\u884c\u7684\u547d\u4ee4\u5217\u8868\u662f\u7b2c\u4e00\u4e2a\u5339\u914d\u8be5\u503c\u7684\u6a21\u5f0f\u7684\u547d\u4ee4\u5217\u8868(\u56e0\u6b64\u8981\u786e\u4fdd\u6ca1\u6709\u91cd\u53e0\u7684\u6a21\u5f0f)\u3002\u6bcf\u4e2a\u547d\u4ee4\u5217\u8868\u5fc5\u987b\u4ee5\u53cc\u5206\u53f7\u7ed3\u675f\u3002\u5982\u679c\u8bed\u53e5\u5728\u6ca1\u6709\u8bed\u6cd5\u9519\u8bef\u7684\u60c5\u51b5\u4e0b\u7ec8\u6b62\uff0c\u5219\u8fd4\u56de\u72b6\u6001\u4e3a\u96f6\u3002", "options": [{"letterSize": 3, "word": "pattern"}, {"letterSize": 5, "word": "expression"}, {"letterSize": 1, "word": "the"}, {"letterSize": 2, "word": "list"}, {"letterSize": 1, "word": "is"}, {"letterSize": 1, "word": "one"}, {"letterSize": 1, "word": "the"}, {"letterSize": 3, "word": "pattern"}, {"letterSize": 3, "word": "matches"}, {"letterSize": 2, "word": "value"}, {"letterSize": 1, "word": "so"}, {"letterSize": 2, "word": "sure"}, {"letterSize": 5, "word": "overlapping"}, {"letterSize": 3, "word": "command"}, {"letterSize": 2, "word": "must"}, {"letterSize": 2, "word": "with"}, {"letterSize": 3, "word": "double"}]}, "msg": "\u8bf7\u6c42\u6210\u529f\uff01"}